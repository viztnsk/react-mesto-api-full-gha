{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nfunction getResponseData(res) {\n  if (!res.ok) {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  return res.json();\n}\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    getResponseData(response);\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    getResponseData(response);\n  }).then(data => {\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      return data;\n    } else {\n      return;\n    }\n  });\n};\nexport const getContent = jwt => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Authorization\": `Bearer ${jwt}`\n    }\n  }).then(res => {\n    getResponseData(response);\n  });\n};","map":{"version":3,"names":["BASE_URL","getResponseData","res","ok","Promise","reject","status","json","register","email","password","fetch","method","headers","body","JSON","stringify","then","response","authorize","data","token","localStorage","setItem","getContent","jwt"],"sources":["/Users/user/Desktop/react-auth/mesto-react/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction getResponseData(res) {\n  if (!res.ok) {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  return res.json();\n} \n\nexport const register = (email, password) => {\n  return fetch (`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password })\n  }).then((response) => {\n    getResponseData(response)\n  })\n}\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((response) => {\n    getResponseData(response)\n  })\n  .then((data) => {\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      return data;\n    }\n    else {\n      return;\n    }\n    })\n};\n\nexport const getContent = (jwt) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Authorization\" : `Bearer ${jwt}`} \n  })\n  .then((res) => { \n    getResponseData(response)\n  })\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,SAASC,eAAe,CAACC,GAAG,EAAE;EAC5B,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;IACX,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUH,GAAG,CAACI,MAAO,EAAC,CAAC;EAChD;EACA,OAAOJ,GAAG,CAACK,IAAI,EAAE;AACnB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAG,GAAEX,QAAS,SAAQ,EAAE;IAClCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAAEC,QAAQ,IAAK;IACpBjB,eAAe,CAACiB,QAAQ,CAAC;EAC3B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,CAACV,KAAK,EAAEC,QAAQ,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;IAClBjB,eAAe,CAACiB,QAAQ,CAAC;EAC3B,CAAC,CAAC,CACDD,IAAI,CAAEG,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,KAAK,EAAE;MACdC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACC,KAAK,CAAC;MACzC,OAAOD,IAAI;IACb,CAAC,MACI;MACH;IACF;EACA,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIC,GAAG,IAAK;EACjC,OAAOd,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,eAAe,EAAI,UAASY,GAAI;IAAC;EACrC,CAAC,CAAC,CACDR,IAAI,CAAEf,GAAG,IAAK;IACbD,eAAe,CAACiB,QAAQ,CAAC;EAC3B,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}