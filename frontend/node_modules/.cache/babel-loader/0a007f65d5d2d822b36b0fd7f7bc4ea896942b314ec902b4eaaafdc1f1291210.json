{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react-auth/mesto-react/src/components/AddPlacePopup.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PopupWithForm from './PopupWithForm.js';\nimport useForm from \"../hooks/useForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPlacePopup(props) {\n  _s();\n  const {\n    values,\n    handleChange,\n    setValues\n  } = useForm({\n    cardName: '',\n    cardLink: ''\n  });\n  React.useEffect(() => {\n    setValues(['', '']);\n  }, [props.isOpen]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace({\n      name: values.cardName,\n      link: values.cardLink\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    name: \"place\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    button: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: values.cardName,\n        onChange: handleChange,\n        id: \"place-input\",\n        className: \"form__input form__input_type_card-name\",\n        type: \"text\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        name: \"name\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"place-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: values.cardLink,\n        onChange: handleChange,\n        id: \"link-input\",\n        className: \"form__input form__input_type_card-link\",\n        type: \"url\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        name: \"link\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"link-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPlacePopup, \"ynZORf01NbidFnhmED02XmY6kpI=\", false, function () {\n  return [useForm];\n});\n_c = AddPlacePopup;\nexport default AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["React","PopupWithForm","useForm","AddPlacePopup","props","values","handleChange","setValues","cardName","cardLink","useEffect","isOpen","handleSubmit","e","preventDefault","onAddPlace","name","link","onClose"],"sources":["/Users/user/Desktop/react-auth/mesto-react/src/components/AddPlacePopup.js"],"sourcesContent":["import React from \"react\";\nimport PopupWithForm from './PopupWithForm.js';\nimport useForm from \"../hooks/useForm.js\";\n\nfunction AddPlacePopup(props) {\n  const { values, handleChange, setValues } = useForm({\n    cardName: '',\n    cardLink: ''\n  })\n  React.useEffect(() => {\n    setValues(['', ''])\n}, [props.isOpen]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddPlace ({\n      name: values.cardName,\n      link: values.cardLink,\n    })\n  }\n  return(\n    <PopupWithForm \n    isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\n    name='place' title=\"Новое место\" button=\"Создать\" children={\n      <fieldset className=\"form__info\">\n        <input value={values.cardName} onChange={handleChange} id='place-input' className=\"form__input form__input_type_card-name\" type=\"text\" placeholder=\"Название\" name=\"name\" required minLength=\"2\" maxLength=\"30\"/>\n        <span id=\"place-input-error\"></span>\n        <input value={values.cardLink} onChange={handleChange} id='link-input' className=\"form__input form__input_type_card-link\" type=\"url\" placeholder=\"Ссылка на картинку\" name=\"link\" required/>\n        <span id=\"link-input-error\"></span>\n      </fieldset>\n    }  />\n  )\n  }\nexport default AddPlacePopup;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,OAAO,MAAM,qBAAqB;AAAC;AAE1C,SAASC,aAAa,CAACC,KAAK,EAAE;EAAA;EAC5B,MAAM;IAAEC,MAAM;IAAEC,YAAY;IAAEC;EAAU,CAAC,GAAGL,OAAO,CAAC;IAClDM,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFT,KAAK,CAACU,SAAS,CAAC,MAAM;IACpBH,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACvB,CAAC,EAAE,CAACH,KAAK,CAACO,MAAM,CAAC,CAAC;EAChB,SAASC,YAAY,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClBV,KAAK,CAACW,UAAU,CAAE;MAChBC,IAAI,EAAEX,MAAM,CAACG,QAAQ;MACrBS,IAAI,EAAEZ,MAAM,CAACI;IACf,CAAC,CAAC;EACJ;EACA,oBACE,QAAC,aAAa;IACd,MAAM,EAAEL,KAAK,CAACO,MAAO;IAAC,OAAO,EAAEP,KAAK,CAACc,OAAQ;IAAC,QAAQ,EAAEN,YAAa;IACrE,IAAI,EAAC,OAAO;IAAC,KAAK,EAAC,+DAAa;IAAC,MAAM,EAAC,4CAAS;IAAC,QAAQ,eACxD;MAAU,SAAS,EAAC,YAAY;MAAA,wBAC9B;QAAO,KAAK,EAAEP,MAAM,CAACG,QAAS;QAAC,QAAQ,EAAEF,YAAa;QAAC,EAAE,EAAC,aAAa;QAAC,SAAS,EAAC,wCAAwC;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,kDAAU;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ;QAAC,SAAS,EAAC,GAAG;QAAC,SAAS,EAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAE,eACjN;QAAM,EAAE,EAAC;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAQ,eACpC;QAAO,KAAK,EAAED,MAAM,CAACI,QAAS;QAAC,QAAQ,EAAEH,YAAa;QAAC,EAAE,EAAC,YAAY;QAAC,SAAS,EAAC,wCAAwC;QAAC,IAAI,EAAC,KAAK;QAAC,WAAW,EAAC,oGAAoB;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAE,eAC5L;QAAM,EAAE,EAAC;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EAEtC;IAAA;IAAA;IAAA;EAAA,QAAI;AAEP;AAAC,GA3BMH,aAAa;EAAA,QACwBD,OAAO;AAAA;AAAA,KAD5CC,aAAa;AA4BtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}