{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';function getResponseData(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}return res.json();}export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(response){return getResponseData(response);});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(response){return getResponseData(response);}).then(function(data){if(data.token){localStorage.setItem('token',data.token);return data;}else{return;}});};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{\"Authorization\":\"Bearer \".concat(token)}}).then(function(response){return getResponseData(response);});};","map":{"version":3,"names":["BASE_URL","getResponseData","res","ok","Promise","reject","status","json","register","email","password","fetch","method","headers","body","JSON","stringify","then","response","authorize","data","token","localStorage","setItem","getContent"],"sources":["/Users/user/Desktop/react-auth/mesto-react/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction getResponseData(res) {\n  if (!res.ok) {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  return res.json();\n} \n\nexport const register = (email, password) => {\n  return fetch (`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password })\n  }).then((response) => getResponseData(response))\n}\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((response) => getResponseData(response))\n  .then((data) => {\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      return data;\n    }\n    else {\n      return;\n    }\n    })\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Authorization\" : `Bearer ${token}`} \n  })\n  .then((response) => getResponseData(response))\n}"],"mappings":"AAAA,MAAO,IAAMA,SAAQ,CAAG,+BAA+B,CAEvD,QAASC,gBAAe,CAACC,GAAG,CAAE,CAC5B,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,CACX,MAAOC,QAAO,CAACC,MAAM,iDAAYH,GAAG,CAACI,MAAM,EAAG,CAChD,CACA,MAAOJ,IAAG,CAACK,IAAI,EAAE,CACnB,CAEA,MAAO,IAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CAC3C,MAAOC,MAAK,WAAKX,QAAQ,YAAW,CAClCY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAC,CAC1C,CAAC,CAAC,CAACO,IAAI,CAAC,SAACC,QAAQ,QAAKjB,gBAAe,CAACiB,QAAQ,CAAC,GAAC,CAClD,CAAC,CAED,MAAO,IAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIV,KAAK,CAAEC,QAAQ,CAAK,CAC5C,MAAOC,MAAK,WAAIX,QAAQ,YAAW,CACjCY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACP,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAQ,CAAC,CACxC,CAAC,CAAC,CACDO,IAAI,CAAC,SAACC,QAAQ,QAAKjB,gBAAe,CAACiB,QAAQ,CAAC,GAAC,CAC7CD,IAAI,CAAC,SAACG,IAAI,CAAK,CACd,GAAIA,IAAI,CAACC,KAAK,CAAE,CACdC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACC,KAAK,CAAC,CACzC,MAAOD,KAAI,CACb,CAAC,IACI,CACH,OACF,CACA,CAAC,CAAC,CACN,CAAC,CAED,MAAO,IAAMI,WAAU,CAAG,QAAbA,WAAU,CAAIH,KAAK,CAAK,CACnC,MAAOV,MAAK,WAAIX,QAAQ,cAAa,CACnCY,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,eAAe,kBAAaQ,KAAK,CAAE,CACvC,CAAC,CAAC,CACDJ,IAAI,CAAC,SAACC,QAAQ,QAAKjB,gBAAe,CAACiB,QAAQ,CAAC,GAAC,CAChD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}